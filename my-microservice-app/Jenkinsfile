pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS_PSW = credentials('DOCKERHUB_CREDENTIALS_PSW')
        DOCKERHUB_CREDENTIALS_USR = credentials('DOCKERHUB_CREDENTIALS_USR')
        DOCKER_HUB_REPO = 'mawulidev'  // Replace with your DockerHub username
        REPO_URL = 'https://github.com/winfred-agbotey/java-advance-week4.git'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/main']],
                        userRemoteConfigs: [[url: REPO_URL]],
                        extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'CloneOption', noTags: false, shallow: true, depth: 1]]
                    ])
                }
            }
        }

        stage('Build Modules in Order') {
            steps {
                script {
                    sh '''
                        cd my-microservice-app/
                        mvn clean install
                    '''
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    sh '''
                        cd my-microservice-app/

                         echo "Building Docker images..."
                                        docker build -t $DOCKER_HUB_REPO/api:$DOCKER_TAG -f api/Dockerfile api/
                                        docker build -t $DOCKER_HUB_REPO/service:$DOCKER_TAG -f service/Dockerfile service/
                                        docker build -t $DOCKER_HUB_REPO/core:$DOCKER_TAG -f core/Dockerfile core/
                                        docker build -t $DOCKER_HUB_REPO/data-access:$DOCKER_TAG -f data-access/Dockerfile data-access/
                    '''
                }
            }
        }

        stage('Push Docker Images to DockerHub') {
            input {
                message 'Deploy to Production?'
                ok 'Deploy'
            }
            steps {
                withCredentials([
                    string(credentialsId: 'DOCKERHUB_CREDENTIALS_USR', variable: 'DOCKERHUB_CREDENTIALS_USR'),
                    string(credentialsId: 'DOCKERHUB_CREDENTIALS_PSW', variable: 'DOCKERHUB_CREDENTIALS_PSW')
                ]) {
                    script {
                        sh '''
                            echo "Logging in to Docker Hub..."
                            echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin

                            echo "Pushing Docker images..."
                            docker push $DOCKER_HUB_REPO/api:$DOCKER_TAG
                            docker push $DOCKER_HUB_REPO/service:$DOCKER_TAG
                            docker push $DOCKER_HUB_REPO/core:$DOCKER_TAG
                            docker push $DOCKER_HUB_REPO/data-access:$DOCKER_TAG
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build and Deployment Successful!'
        }
        failure {
            echo 'Build Failed! Check the logs.'
        }
    }
}
